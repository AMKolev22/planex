/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 mercury.glb -t 
Author: Mieke Roth (https://sketchfab.com/miekeroth)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/mercury-0930a4f0405243f6a9f93a4da79c66b6
Title: Mercury
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mercury_1: THREE.Mesh;
  };
  materials: {
    mercurius: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ModelProps = JSX.IntrinsicElements['group'] & {
  position?: [number, number, number];
};

export default function Model(props: ModelProps) {
  const { nodes, materials } = useGLTF('../../../public/mercury.glb') as GLTFResult;
  const { position = [33, 5, 0], ...groupProps } = props;

  return (
    <group {...groupProps} dispose={null} position={position}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Mercury_1.geometry} material={materials.mercurius} />
      </group>
    </group>
  );
}

useGLTF.preload('../../../public/mercury.glb')
