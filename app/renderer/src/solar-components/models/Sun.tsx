/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t sun.glb 
Author: ARCTIC  WOLVESâ„¢ (https://sketchfab.com/arctic.wolves)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/star-of-sun-519dddb6998545e2bf84225394dc71fe
Title: Star Of Sun
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Sun_LOD0__0: THREE.Mesh
    Sun_LOD1__0: THREE.Mesh
    Sun_LOD2__0: THREE.Mesh
    Sun_LOD3__0: THREE.Mesh
    Sun_LOD4__0: THREE.Mesh
  }
  materials: {
    ['Scene_-_Root']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('../../../public/sun.glb') as GLTFResult
  return (
    <group {...props} dispose={null} position = {[100, 0, 0.256]}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[-Math.PI, 0, 0]}>
          <mesh geometry={nodes.Sun_LOD0__0.geometry} material={materials['Scene_-_Root']} position={[0, 0, -22.361]} />
          <mesh geometry={nodes.Sun_LOD1__0.geometry} material={materials['Scene_-_Root']} position={[0, 0, -22.361]} />
          <mesh geometry={nodes.Sun_LOD2__0.geometry} material={materials['Scene_-_Root']} position={[0, 0, -22.361]} />
          <mesh geometry={nodes.Sun_LOD3__0.geometry} material={materials['Scene_-_Root']} position={[0, 0, -22.361]} />
          <mesh geometry={nodes.Sun_LOD4__0.geometry} material={materials['Scene_-_Root']} position={[0, 0, -22.361]} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('../../../public/sun.glb')
