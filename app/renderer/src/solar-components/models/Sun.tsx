/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 sun.glb -t 
Author: ayushcodemate (https://sketchfab.com/ayushcodemate)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/sun-with-2k-textures-bac9e8f95040484bb86f1deb9bd6fe95
Title: Sun with 2K Textures
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import type { GLTF  } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_5: THREE.Mesh
  };
  materials: {
    material: THREE.MeshStandardMaterial
  };
};

type ModelProps = JSX.IntrinsicElements['group'] & {
  position?: [number, number, number];
};

export default function Model(props: ModelProps) {
  const { nodes, materials } = useGLTF('../../../public/sun.glb') as GLTFResult;
  const { position = [100, 0, 0.256], ...groupProps } = props; // Default position set to [100, 0, 0.256]

  // Assign texture to the material
  const texture = useRef<THREE.Texture>()
  const textureLoader = new THREE.TextureLoader()
  texture.current = textureLoader.load('../../../public/sun-texture.jpg')

  // Modify the material to include the texture
  const material = useRef<THREE.MeshStandardMaterial>()
  material.current = materials.material.clone()
  material.current.map = texture.current
  material.current.metalness = 2

  return (
    <group {...groupProps} dispose={null} position={position}> {/* Apply the position prop here */}
      <mesh geometry={nodes.Object_5.geometry} material={material.current} scale={1} />
    </group>
  )
}

useGLTF.preload('../../../public/sun.glb')
