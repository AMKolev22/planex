/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t earth.glb 
Author: Ricardo Garnica (https://sketchfab.com/rjgarnicap)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-globe-atlas-cd178e25a0e6436380b15fc1539a25f2
Title: Earth Globe - Atlas
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
    Object_3: THREE.Mesh;
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
    Object_6: THREE.Mesh;
    Object_7: THREE.Mesh;
    Object_8: THREE.Mesh;
    Object_9: THREE.Mesh;
    Object_10: THREE.Mesh;
    Object_11: THREE.Mesh;
    Object_12: THREE.Mesh;
  };
  materials: {
    heightmap_ref_group: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('../../../public/earth.glb') as GLTFResult;

  const scaleFactor = 10;

  return (
    <group {...props} dispose={null} position={[-40, -5, 0]} scale={[scaleFactor, scaleFactor, scaleFactor]}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        {Object.keys(nodes).map((nodeName) => (
          <mesh key={nodeName} geometry={nodes[nodeName].geometry} material={materials.heightmap_ref_group} />
        ))}
      </group>
    </group>
  );
}

useGLTF.preload('../../../public/earth.glb')
